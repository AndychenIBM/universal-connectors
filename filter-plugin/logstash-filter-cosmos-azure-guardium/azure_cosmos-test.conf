input
   {
 generator { 
	  type => "azure_cosmos"
	  message => '{"records":[{"time":"2023-04-17T06:06:47.9351659Z","resourceId":"\/SUBSCRIPTIONS\/083DE1FB-CD2D-4B7C-895A-2B5AF1D091E8\/RESOURCEGROUPS\/AZURE-COSMO\/PROVIDERS\/MICROSOFT.DOCUMENTDB\/DATABASEACCOUNTS\/COSMOS-DATABASE","subscriptionId":"083de1fb-cd2d-4b7c-895a-2b5af1d091e8","operationName":"SqlContainersCreate","category":"ControlPlaneRequests","properties":{"activityId":"a8b9e47c-d359-468d-b9b1-9481598c115d","httpstatusCode":"201","result":"OK","httpMethod":"POST","apiKind":"Sql","apiKindResourceType":"Containers","operationType":"Create","resourceUri":"sqlDatabases\/testdatabase\/containers\/testcontainer","resourceDetails":"{id:testcontainer,indexingPolicy:{indexingMode:consistent,automatic:true,includedPaths:[{path:\/*,indexes:[{dataType:Number,precision:-1,kind:Range},{dataType:String,precision:-1,kind:Range}]}],excludedPaths:[],compositeIndexes:[],spatialIndexes:[]},partitionKey:{paths:[\/id],kind:Hash,version:2},uniqueKeyPolicy:{uniqueKeys:[]},conflictResolutionPolicy:{mode:LastWriterWins},uniqueIndexReIndexContext:{uniqueKeys:[]}}"}}],"EventProcessedUtcTime":"2023-04-17T06:56:14.6561982Z","PartitionId":0,"EventEnqueuedUtcTime":"2023-04-17T06:10:48.5830000Z"}'
	  count => 1
  }
   }
filter
	{	
    if[type] == "azure_cosmos"{
	json 
			{
				source => "message" 				
            }
        split
			{
				field => "records"
			}
		mutate
			{
				remove_field => [ "message"]
			}			
		mutate  
			{
				add_field => {"message" => "%{[records]}"}
			}						
		
	  json 
		    {
				source => "message"	
                target => "data"				
            }
	
		mutate  
			{
				add_field => {"operationName" => "%{[data][operationName]}"}
				add_field => {"userAgent" => "%{[data][properties][userAgent]}"}
				add_field => {"useragent" => "%{[data][properties][useragent]}"}
				add_field => {"statusCode" => "%{[data][properties][statusCode]}"}
				add_field => {"category" => "%{[data][category]}"}
			}
	# User can modify below filter to ignore system generated logs
    # For Ex: ([operationName] == "Read" and ([userAgent] =~ /(?i)Microsoft.Azure/ or [userAgent] =~ /(?i)Mozilla/ or [userAgent] =~ /(?i)cosmos-netstandard-sdk/))		
	if ([operationName] == "Read" and ([userAgent] =~ /(?i)Microsoft.Azure/ or [userAgent] =~ /(?i)Mozilla/ or [userAgent] =~ /(?i)cosmos-netstandard-sdk/)) or [useragent] == "Azure Portal" or [userAgent] == "Azure Portal" or ([operationName] == "Query" and [statusCode] == "200") or [operationName] =~ /(?i)ReadFeed/ or [operationName] =~ /(?i)DiagnosticLogUpdateComplete/ or [message] =~ /(?i)_partitionKeyValue/ or [operationName] =~ /(?i)DiagnosticLogUpdateStart/ or ([operationName] =~ /(?i)Create/ and [statusCode] == "200") or [message] =~ /(?i)SystemReadWrite/ or [userAgent] == "ComputeGateway (rerouted)"{
		drop{}
		}	
     if  "ControlPlaneRequests" not in [category] and "QueryRuntimeStatistics" not in [category] and "DataPlaneRequests" not in [category] {
	    drop{}
        }	
	mutate
			{
				remove_field => [ "data","operationName","userAgent","useragent","records","statusCode","category"]
			}		
	azure_cosmos_guardium_filter{}
	} 
	}
output 
   {
      stdout { codec => rubydebug }
   }