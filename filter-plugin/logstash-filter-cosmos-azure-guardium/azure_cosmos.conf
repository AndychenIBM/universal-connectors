input
   {
	 azure_event_hubs 
			{
			  config_mode => "basic"
			  #Insert primary connection string from shared access policies in event hub from azure portal
			  event_hub_connections => [<connection_string>]
			  initial_position => "end"
			  threads => 8
			  decorate_events => true
			  consumer_group => "$Default" 
			  #Insert the Connection string in storage_connection from the Access Keys present in the Storage account from azure portal.
			  storage_connection => "<Connection string>"
			  type => "azure_cosmos"	
			}
   }
filter
	{	
    if[type] == "azure_cosmos"{
	    json 
			{
				source => "message" 				
            }
        split
			{
				field => "records"
			}
		mutate
			{
				remove_field => [ "message"]
			}			
		mutate  
			{
				add_field => {"message" => "%{[records]}"}
			}						
		
	  json 
		    {
				source => "message"	
                target => "data"				
            }
	
		mutate  
			{
				add_field => {"operationName" => "%{[data][operationName]}"}
				add_field => {"userAgent" => "%{[data][properties][userAgent]}"}
				add_field => {"useragent" => "%{[data][properties][useragent]}"}
				add_field => {"statusCode" => "%{[data][properties][statusCode]}"}
				add_field => {"category" => "%{[data][category]}"}
			}
	# User can modify below filter to ignore system generated logs
    # For Ex: ([operationName] == "Read" and ([userAgent] =~ /(?i)Microsoft.Azure/ or [userAgent] =~ /(?i)Mozilla/ or [userAgent] =~ /(?i)cosmos-netstandard-sdk/))		
	if ([operationName] == "Read" and ([userAgent] =~ /(?i)Microsoft.Azure/ or [userAgent] =~ /(?i)Mozilla/ or [userAgent] =~ /(?i)cosmos-netstandard-sdk/)) or [useragent] == "Azure Portal" or [userAgent] == "Azure Portal" or ([operationName] == "Query" and [statusCode] == "200") or [operationName] =~ /(?i)ReadFeed/ or [operationName] =~ /(?i)DiagnosticLogUpdateComplete/ or [message] =~ /(?i)_partitionKeyValue/ or [operationName] =~ /(?i)DiagnosticLogUpdateStart/ or ([operationName] =~ /(?i)Create/ and [statusCode] == "200") or [message] =~ /(?i)SystemReadWrite/ or [userAgent] == "ComputeGateway (rerouted)"{
		drop{}
		}	
    if  "ControlPlaneRequests" not in [category] and "QueryRuntimeStatistics" not in [category] and "DataPlaneRequests" not in [category] {
	    drop{}
        }	
	mutate
			{
				remove_field => [ "data","operationName","userAgent","useragent","records","statusCode","category"]
			}		
	azure_cosmos_guardium_filter{}
	} 
	}