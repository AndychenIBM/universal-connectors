input {
  file {
    path => "${LOGSTASH_DIR}/test_logs/*.log"
	type => "filebeat"
	#make sure logstash read the file from the beginning every time:
	sincedb_path => "/dev/null"
    start_position => "beginning"
  }
}

filter {
  if [type] == "filebeat" {
    mutate { add_field => { "source_program" => "mongod" } }
    mutate { add_field => { "server_hostname" => "server.dummy.hostname" } }
    mutate { add_field => { "client_hostname" => "client.dummy.hostname" } }

    mongodb_guardium_filter {}
  }

  if "_mongoguardium_json_parse_error" not in [tags] {
    mutate { remove_field => ["message","syslog_timestamp","source_program","program","syslog_pid","syslog_message","server_hostname","client_hostname","host","ecs","log","agent","input"] }
  }

  #for test events/sec
  metrics {
    meter => "events"
    add_tag => "metric"
  }
}

output {
  if [GuardRecord] {
    java_output_to_guardium {}
  }

  if "metric" in [tags] {
    file {
      codec => line { format => "rate: %{[events][rate_1m]}" }
      path => "${LOG_GUC_DIR}/events_per_sec-%{+YYYY-MM-dd}.log"
    }
  }
}