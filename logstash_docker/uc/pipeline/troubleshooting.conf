input {
    file {
        path => "${TROUBLESHOOT_OUTPUT}"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        mode => "read"
        exit_after_read => true
        type => "error"
        add_field => { "tenant_id" => "${TENANT_ID}" }
        add_field => { "cluster_id" => "${INPUT_PLUGIN_ID}" }
    }
}

filter {
    if [message] == "" {
        drop {} # Drop the event if the message is an empty string
    } else {
        mutate {
            remove_field => ["path"]
        }
    }
}


output {
    if [type] == "error" {
        kafka {
            codec => json
            topic_id => "${KAFKA_PRODUCER_TOPIC_UC}"
            bootstrap_servers => "${KAFKA_BROKERS}"
            security_protocol=> "${KAFKA_SECURITY_PROTOCOL}"
            sasl_mechanism => "${KAFKA_SASL_MECHANISM}"
            sasl_jaas_config => "org.apache.kafka.common.security.scram.ScramLoginModule required username='${KAFKA_SASL_USER}' password='${KAFKA_SASL_PASSWORD}';"
            ssl_truststore_location=> "${KAFKA_CA_CERT_JKS_PATH}"
            ssl_truststore_password=> "${KAFKA_CA_CERT_JKS_PASSWORD}"
        }
    }
}
